import random


# Описание проекта: программа загадывает слово, а пользователь должен его угадать. Изначально все буквы слова неизвестны.
# Также рисуется виселица с петлей. Пользователь предлагает букву, которая может входить в это слово. Если такая буква есть в слове,
# то программа ставит букву столько раз, сколько она встречается в слове. Если такой буквы нет, к виселице добавляется круг в петле,
# изображающий голову. Пользователь продолжает отгадывать буквы до тех пор, пока не отгадает всё слово. За каждую неудачную попытку
# добавляется еще одна часть туловища висельника (обычно их 6: голова, туловище, 2 руки и 2 ноги.
# Составляющие проекта:
#
# Целые числа (тип int);
# Переменные;
# Ввод / вывод данных (функции input() и print());
# Условный оператор (if/elif/else);
# Цикл while;
# Бесконечный цикл;
# Операторы break, continue;
# Создание пользовательских функций;
# Списочные выражения;
# Работа с модулем random для генерации случайных чисел.
# Примечания
# 1. На английском игра называется Hangman.


def get_word():
    return word_list[random.randint(0, len(word_list) - 1)].upper()


def display_hangman(tries, s_word):
    stages = [(("\033[0;32m\U0001f9E1 \033[0;0m" * tries) + ("\033[0;32m\U0001f90D \033[0;0m" * (len(s_word) + 3 - tries)))]
    return stages[0]


def suspend(stop):
    print('Привет мир!\nДавайте играть в угадайку слов!\nУсловия:\n1. Программа загадывает слово, а пользователь должен его угадать. \n'
        '2. Также рисуется виселица с петлей.\n3. Пользователь предлагает букву, которая может входить в это слово. '
        'Если такая буква есть в слове, то программа ставит букву столько раз, сколько она встречается в слове. '
        '\nЕсли такой буквы нет, к виселице добавляется круг в петле, изображающий голову.\n4. Игра заканчивается если пользователь отгадывает слово или заканчиваются попытки.')
    while stop == 'да':
        random_word = get_word()
        play(random_word)
        stop = input('\nВведите [да] если хотите сыграть заново, [нет] в противном случае: ').lower()
        print()
    print('Приходи еще поиграть, удачи!')


def play(word):
    word_completion = '_' * len(word)  # строка, содержащая символы _ на каждую букву задуманного слова
    guessed_letters = []  # список уже названных букв
    guessed_words = []  # список уже названных слов
    tries = len(word) + 3
    print('\n\nДавайте начнем!\nЗагаданное слово состоит из', len(word), 'букв')

    while True:
        easy_or_not = input('Чтобы было проще, хотите открыть первую и последнюю буквы? (да/нет): ')
        print()
        if easy_or_not.isalpha():
            if easy_or_not.lower() == 'да':
                lst = list(word_completion)
                lst[0] = word[0]
                lst[-1] = word[-1]
                word_completion = ''.join(lst)
                break
            elif easy_or_not.lower() == 'нет':
                print('Ваш выбор, играем! =)')
                break
            else:
                print('Не понял, повторите...')
        else:
            print('Не понял, повторите...')

    print()
    print(separator, '\n               Внимание вопрос!\n')
    print(questions[word_list.index(word)])
    print(separator)

    while tries:
        if word_completion == word:  # Проверка на случай угадывания слова по одной букве
            print('Ура! Вы выиграли!')
            print('Загаданное слово было:', word)
            break
        print(f'Ваши попытки - {display_hangman(tries, word)}')
        print(separator)
        print('Слово   -   ', *word_completion, '\n\n')
        user_letter = input('\nВведите букву или слово полностью: ').upper()
        if len(user_letter) == len(word):  # Проверка на слово полностью
            if user_letter in guessed_words:
                print('Такое слово вы уже пробовали, это не оно!')
            guessed_words.append(user_letter.upper())
            if user_letter.upper() == word:  # Проверка на ввод слова полностью
                print('Ура! Вы выиграли!')
                break
        if not user_letter.isalpha():
            print('Вы что-то неправильно ввели!')
        elif user_letter in guessed_letters:
            print('Вы уже называли такую букву!')
        guessed_letters.append(user_letter)  # Добавляем букву в список уже названных букв
        if user_letter in word:  # Если буква была угадана
            for i in range(len(word)):
                if user_letter == word[i]:
                    lst = list(word_completion)
                    lst[i] = word[i]
                    word_completion = ''.join(lst)
            tries -= 1
        else:
            print('Вы не угадали букву/слово!')
            tries -= 1
    if tries == 0:
        print('Игра закончена!')
        print(display_hangman(tries, word))
        print('Загаданное слово было:', word)

questions = ['Вопрос. Что использовали в Китае для глажки белья вместо утюга?', 'Вопрос. По традиции в Китае муж может в одностороннем порядке объявить о расторжении брака по семейным обстоятельствам. Назовите одну из причин для этого.',
             'Пельмени издавна заготавливают в форме ушек. Что символизируют такие пельмени?', 'Если скорость ветра тропического шторма превышает 60 км/ч, ему присваивают личное имя. \nВо времена Второй мировой войны американские синоптики начали давать ураганам имена кого?',
             'Чтобы отпугнуть врагов, гуси могут грозно шипеть и больно щипаться. \nВ Шотландии решили использовать эту особенность птиц и создали отряд гусей, который стал охранять завод. Какой?',
             'Ювелиры часто говорят, что бриллиантам необходимо это.', 'Какого слова нет в языке народов Арктики?', 'Так в старину называли сторожа городских ворот.']

word_list = ['СКОВОРОДА', 'БОЛТЛИВОСТЬ', 'ПОСЛУШАНИЕ', 'ТЕЩА', 'АЛКОГОЛЬНЫЙ', 'ОДИНОЧЕСТВО', 'ВОЙНА', 'ВРАТАРЬ']
separator = '-' * 60
stop_game = 'да'
suspend(stop_game)
